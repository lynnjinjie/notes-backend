{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","request","axios","get","nonExisting","id","date","then","response","data","concat","newNoteObject","post","put","Footer","style","color","fontSize","fontStyle","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrotMessage","useEffect","noteService","initialNotes","noteToShow","filter","map","key","find","n","changeNote","returnedNote","catch","error","setTimeout","console","log","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","placeholder","type","ReactDOM","render","document","getElementById"],"mappings":"oNAWeA,EATF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QADR,IACiB,4BAAQC,QAASL,GAAmBC,KCG1CK,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAEF,yBAAKJ,UAAU,SAASI,I,gBCkBlB,EArBA,WACb,IAAMC,EAAUC,IAAMC,IAHR,cAIRC,EAAc,CAClBC,GAAI,IACJR,QAAS,mCACTS,KAAM,2BACNX,WAAW,GAEb,OAAOM,EAAQM,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,OAAON,OAa1C,EAVA,SAACO,GAEd,OADgBT,IAAMU,KAdR,aAcsBD,GACrBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,EALA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UAnBF,aAmBE,YAAwBR,GAAMM,GAC/BJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SCfvCK,EAAS,WAMb,OACE,yBAAKC,MANa,CAClBC,MAAO,QACPC,SAAU,GACVC,UAAW,WAIT,6BACA,uGAqGSC,EA9FH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WAERC,IAAqBvB,MAAK,SAACwB,GAEzBT,EAASS,QAEV,IAIH,IAmBMC,EAAaP,EACfJ,EACAA,EAAMY,QAAO,SAACzC,GAAD,OAA6B,IAAnBA,EAAKG,aAsBhC,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcK,QAAS2B,IACvB,6BACE,4BACE7B,QAAS,WACP4B,GAAYD,KAFhB,QAKQA,EAAU,YAAc,QAGlC,4BACGO,EAAWE,KAAI,SAAC1C,GAAD,OACd,kBAAC,EAAD,CACE2C,IAAK3C,EAAKa,GACVb,KAAMA,EACNC,iBAAkB,kBArCD,SAACY,GAC1B,IAAMb,EAAO6B,EAAMe,MAAK,SAACC,GAAD,OAAOA,EAAEhC,KAAOA,KAClCiC,EAAU,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAC/CmC,EACUzB,EAAIiC,GACX/B,MAAK,SAACgC,GACLjB,EAASD,EAAMa,KAAI,SAAC1C,GAAD,OAAWA,EAAKa,KAAOA,EAAKb,EAAO+C,SAEvDC,OAAM,SAACC,GACNb,EAAgB,aAAD,OACApC,EAAKK,QADL,sCAGf6C,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAACzC,GAAD,OAAUA,EAAKa,KAAOA,SAEhDsC,QAAQC,IAAI,SAAUvC,GAoBUwC,CAAmBrD,EAAKa,WAItD,0BAAMyC,SAjEM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBpD,QAAS0B,EACTjB,MAAM,IAAI4C,MAAOC,cACjBxD,UAAWyD,KAAKC,SAAW,IAI7BvB,EAAmBmB,GAAY1C,MAAK,SAACgC,GACnCjB,EAASD,EAAMX,OAAO6B,IACtBf,EAAW,SAuDT,2BACE8B,MAAO/B,EACPgC,SAtDiB,SAACR,GAExBvB,EAAWuB,EAAMS,OAAOF,QAqDlBG,YAAY,oBAEd,4BAAQC,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MCrGNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.456ae8b4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important'\n  return (\n    <li className=\"note\">\n      {note.content} <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return <div className=\"error\">{message}</div>\n}\n\nexport default Notification\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then((response) => response.data.concat(nonExisting))\n}\n\nconst create = (newNoteObject) => {\n  const request = axios.post(baseUrl, newNoteObject)\n  return request.then((response) => response.data)\n}\n\nconst update = (id, newNoteObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newNoteObject)\n  return request.then((response) => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n}\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\n\nimport noteService from './services/notes'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontSize: 16,\n    fontStyle: 'italic',\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrotMessage] = useState(null)\n\n  useEffect(() => {\n    // console.log('effect')\n    noteService.getAll().then((initialNotes) => {\n      // console.log('promise fulfilled')\n      setNotes(initialNotes)\n    })\n  }, [])\n  // console.log('render', notes.length, 'notes')\n\n  // 添加note\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      // 让服务器生成id\n      // id: notes.length + 1,\n    }\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n  }\n  const handleNoteChange = (event) => {\n    // console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n  // 显示的note\n  const noteToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true)\n\n  // 切换note重要性\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id)\n    const changeNote = { ...note, important: !note.important }\n    noteService\n      .update(id, changeNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\n      })\n      .catch((error) => {\n        setErrotMessage(\n          `the note '${note.content}' was already deleted from server`\n        )\n        setTimeout(() => {\n          setErrotMessage(null)\n        }, 5000)\n        setNotes(notes.filter((note) => note.id !== id))\n      })\n    console.log('import', id)\n  }\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage}></Notification>\n      <div>\n        <button\n          onClick={() => {\n            setShowAll(!showAll)\n          }}\n        >\n          show {showAll ? 'Important' : 'All'}\n        </button>\n      </div>\n      <ul>\n        {noteToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n          placeholder=\"a new values...\"\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer></Footer>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n// import axios from 'axios'\n\n// axios.get('http://localhost:3001/notes').then((res) => {\n//   const notes = res.data\n//   ReactDOM.render(<App notes={notes} />, document.getElementById('root'))\n// })\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}